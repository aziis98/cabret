(*script.Program)({
  Statements: ([]script.Expression) (len=1) {
    (*script.FunctionCall)({
      Receiver: (*script.Identifier)({
        Value: (string) (len=5) "match"
      }),
      Arguments: ([]script.ArgumentExpression) (len=2) {
        (*script.BinaryOperation)({
          Lhs: (*script.Identifier)({
            Value: (string) (len=1) "x"
          }),
          Operator: (string) "",
          Rhs: (script.Expression) <nil>
        }),
        (*script.BinaryOperation)({
          Lhs: (*script.ListExpression)({
            Values: ([]script.Expression) (len=2) {
              (*script.BinaryOperation)({
                Lhs: (*script.Quote)({
                  Value: (*script.Identifier)({
                    Value: (string) (len=4) "None"
                  })
                }),
                Operator: (string) (len=2) "->",
                Rhs: (*script.BinaryOperation)({
                  Lhs: (*script.LiteralNumber)({
                    Value: (float64) 0
                  }),
                  Operator: (string) "",
                  Rhs: (script.Expression) <nil>
                })
              }),
              (*script.BinaryOperation)({
                Lhs: (*script.Quote)({
                  Value: (*script.ParenthesizedExpression)({
                    Inner: (*script.FunctionCall)({
                      Receiver: (*script.Identifier)({
                        Value: (string) (len=4) "Some"
                      }),
                      Arguments: ([]script.ArgumentExpression) (len=1) {
                        (*script.BinaryOperation)({
                          Lhs: (*script.Identifier)({
                            Value: (string) (len=5) "value"
                          }),
                          Operator: (string) "",
                          Rhs: (script.Expression) <nil>
                        })
                      }
                    })
                  })
                }),
                Operator: (string) (len=2) "->",
                Rhs: (*script.BinaryOperation)({
                  Lhs: (*script.Identifier)({
                    Value: (string) (len=5) "value"
                  }),
                  Operator: (string) "",
                  Rhs: (script.Expression) <nil>
                })
              })
            }
          }),
          Operator: (string) "",
          Rhs: (script.Expression) <nil>
        })
      }
    })
  }
})
